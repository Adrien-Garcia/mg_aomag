version: "2.1"

services:
    web:
        container_name: ${COMPOSE_PROJECT_NAME}-web
        image: registry.jetpulp.fr:5000/dev/php70-apache
        ports:
            - "${DOCKER_PORT_HTTP}:80"
            - "${DOCKER_PORT_HTTPS}:443"
        volumes:
            - ../server:/var/www/html
            - ./web/vhost.conf:/etc/apache2/sites-enabled/vhost.conf
            - ./web/php.ini:/usr/local/etc/php/php.ini
            - certificat-ssl:/certs
        environment:
            - SERVER_NAME
            - VIRTUAL_HOST
            - USER_UID
            - USER_GROUP
            - DOCKER_HOST_IP
        depends_on:
            - db
            - redis
            - mailhog
            - blackfire
    db:
        container_name: ${COMPOSE_PROJECT_NAME}-db
        image: mariadb:10.0
        ports:
            - "${DOCKER_PORT_MYSQL}:3306"
        volumes:
            - ./db:/docker-entrypoint-initdb.d
            - dbdata:/var/lib/mysql
        environment:
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_DATABASE
            - SERVER_NAME
            - ORIGINAL_SERVER_NAME
    redis:
        container_name: ${COMPOSE_PROJECT_NAME}-redis
        image: redis
    mailhog:
        container_name: ${COMPOSE_PROJECT_NAME}-mailhog
        image: mailhog/mailhog
        ports:
            - "${DOCKER_PORT_MAILHOG}:8025"
    blackfire:
        container_name: ${COMPOSE_PROJECT_NAME}-blackfire
        image: blackfire/blackfire
        environment:
            - BLACKFIRE_SERVER_ID
            - BLACKFIRE_SERVER_TOKEN
    gulp:
        container_name: ${COMPOSE_PROJECT_NAME}-gulp
        image: registry.jetpulp.fr:5000/dev/gulp-dev
        ports:
            - "${DOCKER_PORT_BSYNC}:3000"
            - "${DOCKER_PORT_BSYNC1}:3001"
        volumes:
            - ../server:/app
            - certificat-ssl:/certs
        environment:
            - BUILD_PATH=skin/frontend/COMPUTEC/default/gulp
    #        - BUILD_PATH=skin/frontend/BRANDER/default/gulp
    #        - BUILD_PATH=skin/frontend/ANGLECIA/default/gulp
            - SERVER_NAME
            - USER_UID
            - USER_GROUP
    selenium:
        # TODO Push image onto registry:
        # https://git.jetpulp.hosting/dev/docker-dev
        # build:
        #     context: ../server/selenium
        image: tmp:latest
        environment:
            BASE_HOST_URL: #forwarding to container
            SELENIUM_BROWSER: #forwarding to container
            SEL_BROWSER_NAME: #forwarding to container
            SEL_BROWSER_PLATFORM: #forwarding to container
            SEL_BROWSER_VERSION: #forwarding to container
            SELENIUM_REMOTE_URL: #forwarding to container
            HUB_PORT_4444_TCP_ADDR: #forwarding to container
        # TODO Rename image once it has been pushed on the registry
        container_name: ${COMPOSE_PROJECT_NAME}-selenium
        volumes:
            # - ../../seletest/test/src:/test/src
            # - ../../seletest/test/main.js:/test/main.js
            # - ../../seletest/test/main.js:/test/package.json
            # - ../../seletest/test/out:/test/out
            - ../test/src:/test/src
            - ../test/main.js:/test/main.js
            - ../test/main.js:/test/package.json
            - ../test/out:/test/out
#        networks:
#            - grid_sel_grid
        restart: on-failure:1

volumes:
  dbdata:
    external:
      name: ${COMPOSE_PROJECT_NAME}-dbdata
  certificat-ssl:
    external: true

networks:
    default:
        driver: bridge
